<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Product>Ben.Demystifier-RoslynScriptingCompatibility</Product>
    <Title>Ben.Demystifier-RoslynScriptingCompatibility</Title>
    <Description>The whole point of this fork is simply to be able to use both Roslyn Scripting API and Ben.Demystifier when both are strongnamed. Furthermore the library is strongnamed.

So far this is not working since Ben.Demystifier requires System.Reflection.Metadata 1.5.0 which requires System.Collections.Immutable 1.4.0. And Microsoft.CodeAnalysis.CSharp.Scripting brings System.Collections.Immutable 1.3.1.
It also requires System.ValueTuple 4.4.0, while Microsoft.CodeAnalysis.CSharp.Scripting brings 4.3.0</Description>
    <Authors>ben_a_adams molinch</Authors>
    <RepositoryUrl>https://github.com/molinch/Ben.Demystifier-RoslynScriptingCompatibility</RepositoryUrl>
    <PackageProjectUrl>https://github.com/molinch/Ben.Demystifier-RoslynScriptingCompatibility</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/molinch/Ben.Demystifier-RoslynScriptingCompatibility/blob/master/LICENSE</PackageLicenseUrl>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <Version>0.0.6.2</Version>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
    <LangVersion>7.1</LangVersion>
    <PackageId>Ben.Demystifier-RoslynScriptingCompatibility</PackageId>
    <AssemblyName>Ben.Demystifier-RoslynScriptingCompatibility</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>DummySigningKey.snk</AssemblyOriginatorKeyFile>
    <AssemblyVersion>0.0.6</AssemblyVersion>
    <FileVersion>0.0.6</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Reflection.Metadata">
      <Version>1.4.2</Version>
    </PackageReference>
    <PackageReference Include="System.ValueTuple">
      <Version>4.3.0</Version>
    </PackageReference>
  </ItemGroup>

</Project>
